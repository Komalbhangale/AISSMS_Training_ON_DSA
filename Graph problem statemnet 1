Implement BFS & DFS Traversal of a Graph

basic structure:

#include <iostream>
#include <vector>
#include <queue>
using namespace std;

class Graph {
    int V;
    vector<vector<int>> adj;

public:
    Graph(int V) {
        this->V = V;
        adj.resize(V);
    }

    void addEdge(int u, int v) {
        adj[u].push_back(v);
        adj[v].push_back(u);  // Remove for directed graph
    }

    void BFS(int start) {
        
    }

    

    void DFS(int start) {
        
    }
};

int main() {
    Graph g(5);
    g.addEdge(0, 1);
    g.addEdge(0, 2);
    g.addEdge(1, 3);
    g.addEdge(1, 4);

    cout << "BFS: ";
    g.BFS(0);
    cout << "\nDFS: ";
    g.DFS(0);
    return 0;
}
